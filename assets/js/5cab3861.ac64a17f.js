"use strict";(self.webpackChunktech_docs=self.webpackChunktech_docs||[]).push([[7296],{4411:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"tech/github/delete-all-workflow-runs","title":"Deleting All Workflow Runs","description":"Delete all GitHub Actions workflow runs from a repository using PowerShell and the GitHub CLI.","source":"@site/docs/tech/github/delete-all-workflow-runs.md","sourceDirName":"tech/github","slug":"/tech/github/delete-all-workflow-runs","permalink":"/tech-docs/docs/tech/github/delete-all-workflow-runs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tech/github/delete-all-workflow-runs.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"techDocsSidebar","previous":{"title":"Github","permalink":"/tech-docs/docs/category/github-1"}}');var o=r(4848),s=r(8453);const l={sidebar_position:1},i="Deleting All Workflow Runs",c={},a=[];function h(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"deleting-all-workflow-runs",children:"Deleting All Workflow Runs"})}),"\n",(0,o.jsx)(n.p,{children:"Delete all GitHub Actions workflow runs from a repository using PowerShell and the GitHub CLI.\r\nWhile GitHub\u2019s retention settings only clear the logs inside workflows, they don\u2019t remove the workflow entries themselves."}),"\n",(0,o.jsx)(n.p,{children:"To solve this, we can write a PowerShell script as highlighted in the below blog"}),"\n",(0,o.jsxs)(n.p,{children:["Source Blog : ",(0,o.jsx)(n.a,{href:"https://den.dev/blog/delete-all-github-workflow-runs-powershell/",children:"Delete all github workflow runs using powershell"})]}),"\n",(0,o.jsxs)(n.p,{children:["Create a powershell script named ",(0,o.jsx)(n.code,{children:"run.ps1"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'param (\r\n    [string]$Owner,\r\n    [string]$Repo\r\n)\r\n\r\nif (-not (Get-Command gh -ErrorAction SilentlyContinue)) {\r\n    Write-Host "GitHub CLI (gh) is not installed. Please install it from https://cli.github.com/" -ForegroundColor Red\r\n    exit 1\r\n}\r\n\r\nif (-not $Owner -or -not $Repo) {\r\n    Write-Host "Usage: .\\run.ps1 -Owner <GitHub-Owner> -Repo <GitHub-Repo>" -ForegroundColor Yellow\r\n    exit 1\r\n}\r\n\r\n$workflowRuns = gh api repos/$Owner/$Repo/actions/runs --paginate --jq \'.workflow_runs[].id\'\r\n\r\nforeach ($runId in $workflowRuns) {\r\n    Write-Host "Deleting workflow run ID: $runId"\r\n    gh api repos/$Owner/$Repo/actions/runs/$runId -X DELETE\r\n}\r\n\r\nWrite-Host "All workflow runs have been deleted."\n'})}),"\n",(0,o.jsx)(n.p,{children:"This script does a few things:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Accepts the owner and the repository as arguments."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Run it as: ",(0,o.jsx)(n.code,{children:".\\run.ps1 -Owner <GitHub-Owner> -Repo <GitHub-Repo>."})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Avoids hard-coding values so it can run across different repositories easily."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Checks if the GitHub CLI (gh) is installed by calling Get-Command on gh."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Validates that both the owner and repository name are provided."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Retrieves all workflow runs by calling the repos/$Owner/$Repo/actions/runs endpoint with --paginate to fetch all pages of results."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"For each workflow run ID, sends a DELETE request to repos/$Owner/$Repo/actions/runs/$runId to remove the run."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Before running the script, make sure you\u2019re authenticated with your GitHub account:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"gh auth login"})}),"\n",(0,o.jsx)(n.p,{children:"Once you logged in, call the script with a repo to which you have access and where you want to erase all workflow runs."}),"\n",(0,o.jsxs)(n.p,{children:["Example command:\r\n",(0,o.jsx)(n.code,{children:".\\run.ps1 -Owner glibnub -Repo waittimes-aggregator"})]}),"\n",(0,o.jsx)(n.p,{children:"All the workflow runs will be deleted after this command"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);